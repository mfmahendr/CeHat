/*
Deployment script for C:\USERS\LENOVO\SOURCE\REPOS\CEHAT\CEHAT\CEHATDB.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "C:\USERS\LENOVO\SOURCE\REPOS\CEHAT\CEHAT\CEHATDB.MDF"
:setvar DefaultFilePrefix "C_\USERS\LENOVO\SOURCE\REPOS\CEHAT\CEHAT\CEHATDB.MDF_"
:setvar DefaultDataPath "C:\Users\LENOVO\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\LENOVO\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[TblPenyakit].[NamaPenyakit] (SqlSimpleColumn) will not be renamed to Nama';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[FK_Table_ToTable] (SqlForeignKeyConstraint) will not be renamed to FK_Detail_Gejala';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[FK_Table_ToTable_1] (SqlForeignKeyConstraint) will not be renamed to FK_Detail_Gejala';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[FK_TblPenyakit_ToTable] (SqlForeignKeyConstraint) will not be renamed to FK_TblPenyakit_TblObat';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[Table].[Username] (SqlSimpleColumn) will not be renamed to username';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[Table].[Password] (SqlSimpleColumn) will not be renamed to password';


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Creating Table [dbo].[Admin]...';


GO
CREATE TABLE [dbo].[Admin] (
    [Id]       INT          IDENTITY (1, 1) NOT NULL,
    [username] VARCHAR (50) NOT NULL,
    [password] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[TblDetail]...';


GO
CREATE TABLE [dbo].[TblDetail] (
    [Id]         INT NOT NULL,
    [IdPenyakit] INT NOT NULL,
    [IdGejala]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[TblGejala]...';


GO
CREATE TABLE [dbo].[TblGejala] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Gejala] VARCHAR (300) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[TblObat]...';


GO
CREATE TABLE [dbo].[TblObat] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Nama]        VARCHAR (50) NOT NULL,
    [Dosis]       TEXT         NULL,
    [EfekSamping] TEXT         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[TblPenyakit]...';


GO
CREATE TABLE [dbo].[TblPenyakit] (
    [Id]     INT          IDENTITY (1, 1) NOT NULL,
    [Nama]   VARCHAR (50) NOT NULL,
    [IdObat] INT          NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_TblDetail_Penyakit]...';


GO
ALTER TABLE [dbo].[TblDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_TblDetail_Penyakit] FOREIGN KEY ([IdPenyakit]) REFERENCES [dbo].[TblPenyakit] ([Id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_TblDetail_Gejala]...';


GO
ALTER TABLE [dbo].[TblDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_TblDetail_Gejala] FOREIGN KEY ([IdGejala]) REFERENCES [dbo].[TblGejala] ([Id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_TblPenyakit_TblObat]...';


GO
ALTER TABLE [dbo].[TblPenyakit] WITH NOCHECK
    ADD CONSTRAINT [FK_TblPenyakit_TblObat] FOREIGN KEY ([IdObat]) REFERENCES [dbo].[TblObat] ([Id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[TblDetail] WITH CHECK CHECK CONSTRAINT [FK_TblDetail_Penyakit];

ALTER TABLE [dbo].[TblDetail] WITH CHECK CHECK CONSTRAINT [FK_TblDetail_Gejala];

ALTER TABLE [dbo].[TblPenyakit] WITH CHECK CHECK CONSTRAINT [FK_TblPenyakit_TblObat];


GO
PRINT N'Update complete.';


GO
